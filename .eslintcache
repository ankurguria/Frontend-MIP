[{"/home/ankur/Documents/frontend-main-/src/index.js":"1","/home/ankur/Documents/frontend-main-/src/App.js":"2","/home/ankur/Documents/frontend-main-/src/reportWebVitals.js":"3","/home/ankur/Documents/frontend-main-/src/components/Dashboard.js":"4","/home/ankur/Documents/frontend-main-/src/components/Login.js":"5","/home/ankur/Documents/frontend-main-/src/components/Register.js":"6","/home/ankur/Documents/frontend-main-/src/screens/LandingPage.js":"7","/home/ankur/Documents/frontend-main-/src/components/InterviewCompletedCard.js":"8","/home/ankur/Documents/frontend-main-/src/components/NavBar.js":"9","/home/ankur/Documents/frontend-main-/src/components/InterviewUpcomingCard.js":"10","/home/ankur/Documents/frontend-main-/src/components/PendingRequestCard.js":"11","/home/ankur/Documents/frontend-main-/src/components/Profile.js":"12","/home/ankur/Documents/frontend-main-/src/screens/slotform/Form.js":"13","/home/ankur/Documents/frontend-main-/src/components/Feedbackform.js":"14","/home/ankur/Documents/frontend-main-/src/screens/slotform/Confirm.js":"15","/home/ankur/Documents/frontend-main-/src/screens/slotform/SlotBooking.js":"16","/home/ankur/Documents/frontend-main-/src/screens/slotform/InterType.js":"17","/home/ankur/Documents/frontend-main-/src/screens/slotform/Success.js":"18","/home/ankur/Documents/frontend-main-/src/screens/slotform/PeerSelection.js":"19","/home/ankur/Documents/frontend-main-/src/screens/slotform/userCard.js":"20","/home/ankur/Documents/frontend-main-/src/screens/slotform/NoPeer.js":"21"},{"size":506,"mtime":1639814383133,"results":"22","hashOfConfig":"23"},{"size":3013,"mtime":1639814382901,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1639814383133,"results":"25","hashOfConfig":"23"},{"size":8612,"mtime":1639816039706,"results":"26","hashOfConfig":"23"},{"size":3713,"mtime":1639814383129,"results":"27","hashOfConfig":"23"},{"size":6769,"mtime":1639814383129,"results":"28","hashOfConfig":"23"},{"size":5267,"mtime":1639814383133,"results":"29","hashOfConfig":"23"},{"size":3118,"mtime":1639814383129,"results":"30","hashOfConfig":"23"},{"size":4379,"mtime":1639814383129,"results":"31","hashOfConfig":"23"},{"size":1797,"mtime":1639814383129,"results":"32","hashOfConfig":"23"},{"size":2315,"mtime":1639814383129,"results":"33","hashOfConfig":"23"},{"size":6696,"mtime":1639814383129,"results":"34","hashOfConfig":"23"},{"size":4522,"mtime":1639814383133,"results":"35","hashOfConfig":"23"},{"size":3830,"mtime":1639814383129,"results":"36","hashOfConfig":"23"},{"size":2962,"mtime":1639814383133,"results":"37","hashOfConfig":"23"},{"size":4626,"mtime":1639814383133,"results":"38","hashOfConfig":"23"},{"size":1454,"mtime":1639814383133,"results":"39","hashOfConfig":"23"},{"size":281,"mtime":1639814383133,"results":"40","hashOfConfig":"23"},{"size":2167,"mtime":1639814383133,"results":"41","hashOfConfig":"23"},{"size":516,"mtime":1639814383133,"results":"42","hashOfConfig":"23"},{"size":970,"mtime":1639814383133,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p7c2su",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"71"},"/home/ankur/Documents/frontend-main-/src/index.js",[],"/home/ankur/Documents/frontend-main-/src/App.js",["91"],"/home/ankur/Documents/frontend-main-/src/reportWebVitals.js",[],"/home/ankur/Documents/frontend-main-/src/components/Dashboard.js",["92","93","94","95","96"],"/home/ankur/Documents/frontend-main-/src/components/Login.js",["97","98"],"/home/ankur/Documents/frontend-main-/src/components/Register.js",["99","100"],"/home/ankur/Documents/frontend-main-/src/screens/LandingPage.js",[],"/home/ankur/Documents/frontend-main-/src/components/InterviewCompletedCard.js",[],"/home/ankur/Documents/frontend-main-/src/components/NavBar.js",["101","102","103"],"/home/ankur/Documents/frontend-main-/src/components/InterviewUpcomingCard.js",["104"],"/home/ankur/Documents/frontend-main-/src/components/PendingRequestCard.js",[],"/home/ankur/Documents/frontend-main-/src/components/Profile.js",[],"/home/ankur/Documents/frontend-main-/src/screens/slotform/Form.js",["105","106","107"],"import React, { Component } from 'react';\nimport InterType from './InterType';\nimport SlotBooking from './SlotBooking';\nimport Confirm from './Confirm';\nimport Success from './Success';\nimport PeerSelection from './PeerSelection';\nimport NoPeer from './NoPeer';\nimport UserCard from './userCard';\nexport class Form extends Component {\n    state = {\n        step: 1,\n        interviewType: '',\n        date: '',\n        time:  '',\n        allExperts :[],\n        interviewFor : this.props.intType,\n        selectedExpert: '',\n        expertFound : false,\n        peerMatched : false\n    };\n\n    nextStep = () => {\n        \n        const { step } = this.state;\n        this.setState({ step: step + 1 });\n    };\n\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({ step: step - 1 });\n    };\n    prevStep1 = () => {\n        const { step } = this.state;\n        this.setState({ step: step - 2 });\n    };\n\n    inputChange = input => e => {\n        this.setState({\n            [input]: e.target.value\n        });\n    };\n    stateChange = (input,val) =>{\n        this.setState({[input]:val});\n    }\n    callApi = async () =>{\n       \n     // console.log('my timestamp created is :'+ timestamp);\n             try {\n            const res = await fetch(\"https://mockinterviewplatform.herokuapp.com/api/slotbooking/allExpertData\", {\n              method: \"GET\",\n              //credentials: 'include',\n              headers: {token: localStorage.token }\n            });\n            const parseData = await res.json();\n            this.setState({allExperts:parseData});\n          } catch (err) {\n            console.error(err.message);\n          }\n    };\n    peerSearch = async () =>{\n        \n        await this.callApi();\n        if(this.state.allExperts.length===0) this.setState({expertFound:false});\n        this.setState({expertFound:true});\n\n    };\n   componentDidMount()\n   {\n    this.peerSearch();\n   }\n\n    render() {\n        const { step } = this.state;\n        const { interviewType, date, time, selectedExpert,allExperts,interviewFor,peerMatched } = this.state;\n        const values = { interviewType, date, time, selectedExpert,allExperts,interviewFor,peerMatched };\n        \n        switch (step) {\n            case 1:\n                return (\n                   \n                    <InterType\n                        nextStep={this.nextStep}\n                        inputChange={this.inputChange}\n                        values={values}\n                    />\n                );\n            case 2:\n                return (\n                    <SlotBooking\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        inputChange={this.inputChange}\n                        values={values}\n                    />\n                );\n                case 3:\n                   {\n                    if(interviewFor===\"peer\")\n                    this.nextStep();\n                   } \n                    \n                      return (\n                          \n                        /*  <UserCard allPeers/>*/\n                    <PeerSelection\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        inputChange={this.inputChange}\n                        values={values}\n                        \n                    />\n                    );\n            case 4:\n                    return (\n                        <Confirm\n                        nextStep={this.nextStep}\n                        prevStep={interviewFor===\"peer\"? this.prevStep1:this.prevStep}\n                        stateChange={this.stateChange}\n                        values={values} \n                    />\n                    );\n                   \n                \n            case 5:\n                {console.log(this.state.peerMatched)}\n                if((this.state.interviewFor===\"peer\" && this.state.peerMatched) || (this.state.interviewFor===\"expert\" && this.state.expertFound))\n                    {\n                return (\n                    <Success />\n                );\n                    }\n                    else{\n                        return(<NoPeer \n                            nextStep={this.nextStep}\n                            prevStep={this.prevStep}\n                            values ={values}\n                        />);\n                    }\n            default:\n                return <Success />;\n            \n        }\n    }\n}\n\nexport default Form\n",["108","109"],"/home/ankur/Documents/frontend-main-/src/components/Feedbackform.js",[],"/home/ankur/Documents/frontend-main-/src/screens/slotform/Confirm.js",["110"],"import React, { Component } from 'react'\n\nexport class Confirm extends Component {\n    continue = e => {\n        e.preventDefault();\n        let timestamp= this.props.values.date+\"T\"+this.props.values.time+'+00:00';\n        const url =\"https://mockinterviewplatform.herokuapp.com/api/slotbooking/book_now\";\n        let data ;\n        console.log(this.props.values.interviewFor);\n        if(this.props.values.interviewFor===\"expert\"){\n            data={       \n                \"is_expert_interview\" : true,\n                \"interviewer_id\" : this.props.values.selectedExpert,\n                \"type_of_interview\": this.props.values.interviewType,\n                \"preferred_slot\": timestamp\n            };\n        } else\n        {\n            data={\n                \"is_expert_interview\" : false,\n                \"interviewer_id\" : null,\n                \"type_of_interview\": this.props.values.interviewType,\n                \"preferred_slot\": timestamp\n            }\n        }\n        console.log(data);\n        fetch(url, { method: \"POST\", // or ‘PUT’\n        body: JSON.stringify(data), // data can be `string` or {object}!\n        headers:{ 'content-type': 'application/json',token: localStorage.token} })\n        .then(res => res.json())\n        .catch(error => console.error('Error:', error))\n        .then(response => this.props.stateChange('peerMatched',response.status)); \n        this.props.nextStep();\n    };\n\n\n    \n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n        \n    };\n    mystyle = {\n        position: \"absolute\",\n         right: \"50px\"\n      };\n      mystyle1 = {\n         left: \"10px\"\n      };\n    render() {\n        const {\n            values: { interviewType, date, time, selectedExpert,interviewFor }\n        } = this.props;\n\n        return (\n            <div className=\"form-container\">\n              <center>  <h1 className=\"mb-5\">Confirm</h1> </center>\n              \n                <ul className=\"list-group\">\n                  <h4> <strong> <li className=\"list-group-item\">Interview Type : {interviewType}</li></strong></h4>\n                  <h4> <strong>  <li className=\"list-group-item\">Date : {date}</li> </strong></h4>\n                  <h4> <strong>  <li className=\"list-group-item\">Time : {time}</li></strong></h4>\n                  <h4> <strong> <li className=\"list-group-item\">interviewFor : {interviewFor}</li></strong></h4>\n                </ul>\n\n                <br /><br />\n\n                <div className=\"container-contact100-form-btn\" style={{maxWidth:200, float:\"right\"}}>\n                        <button className=\"contact100-form-btn\" onClick={this.continue}>Proceed</button>\n                    </div>\n                    <div className=\"container-contact100-form-btn\" style={{maxWidth:200}}>\n                        <button className=\"contact100-form-btn\" onClick={this.back}>Back</button>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default Confirm\n","/home/ankur/Documents/frontend-main-/src/screens/slotform/SlotBooking.js",[],"/home/ankur/Documents/frontend-main-/src/screens/slotform/InterType.js",[],"/home/ankur/Documents/frontend-main-/src/screens/slotform/Success.js",["111"],"import React, { Component } from 'react'\nimport Image from '../../assets/images/success.png'\nexport class Success extends Component {\n    render() {\n        return (\n            <div>\n                <img src={Image} />\n            </div>\n        )\n    }\n}\n\nexport default Success\n","/home/ankur/Documents/frontend-main-/src/screens/slotform/PeerSelection.js",[],"/home/ankur/Documents/frontend-main-/src/screens/slotform/userCard.js",[],"/home/ankur/Documents/frontend-main-/src/screens/slotform/NoPeer.js",["112"],"import React, { Component } from 'react';\nimport Image from '../../assets/images/success.png';\nexport class NoPeer extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    };\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    };\n   \n     mystyle = {\n        position: \"absolute\",\n         right: \"10px\"\n      };\n      mystyle1 = {\n         left: \"10px\"\n      };\nrender(){\nreturn (\n    <div>\n    <img src ={Image} />\n    <div className=\"container-contact100-form-btn\" style={{maxWidth:200, float:\"right\"}}>\n                        <button className=\"contact100-form-btn\" onClick={this.continue}>Proceed</button>\n                    </div>\n                    <div className=\"container-contact100-form-btn\" style={{maxWidth:200}}>\n                        <button className=\"contact100-form-btn\" onClick={this.back}>Back</button>\n                    </div>\n\n</div>\n\n)\n}\n}\nexport default NoPeer;",{"ruleId":"113","severity":1,"message":"114","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":13},{"ruleId":"113","severity":1,"message":"117","line":3,"column":9,"nodeType":"115","messageId":"116","endLine":3,"endColumn":15},{"ruleId":"113","severity":1,"message":"118","line":8,"column":10,"nodeType":"115","messageId":"116","endLine":8,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":62,"column":6,"nodeType":"121","endLine":62,"endColumn":8,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":168,"column":9,"nodeType":"125","endLine":168,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":168,"column":9,"nodeType":"125","endLine":168,"endColumn":22},{"ruleId":"113","severity":1,"message":"128","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"129","line":2,"column":16,"nodeType":"115","messageId":"116","endLine":2,"endColumn":24},{"ruleId":"113","severity":1,"message":"129","line":2,"column":16,"nodeType":"115","messageId":"116","endLine":2,"endColumn":24},{"ruleId":"130","severity":1,"message":"131","line":38,"column":14,"nodeType":"132","messageId":"133","endLine":38,"endColumn":16},{"ruleId":"113","severity":1,"message":"134","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"135","line":16,"column":8,"nodeType":"115","messageId":"116","endLine":16,"endColumn":13},{"ruleId":"113","severity":1,"message":"136","line":17,"column":8,"nodeType":"115","messageId":"116","endLine":17,"endColumn":16},{"ruleId":"113","severity":1,"message":"137","line":5,"column":15,"nodeType":"115","messageId":"116","endLine":5,"endColumn":21},{"ruleId":"113","severity":1,"message":"138","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":97,"column":20,"nodeType":"141","messageId":"142","endLine":100,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":125,"column":17,"nodeType":"141","messageId":"142","endLine":125,"endColumn":54},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"113","severity":1,"message":"147","line":52,"column":50,"nodeType":"115","messageId":"116","endLine":52,"endColumn":64},{"ruleId":"148","severity":1,"message":"149","line":7,"column":17,"nodeType":"125","endLine":7,"endColumn":36},{"ruleId":"148","severity":1,"message":"149","line":24,"column":5,"nodeType":"125","endLine":24,"endColumn":25},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'ImportantDevices' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.","ArrayExpression",["150"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Fragment' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'setVis' is assigned a value but never used.","'UserCard' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'selectedExpert' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"153","fix":"154"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getProfile]",{"range":"155","text":"156"},[1767,1769],"[getProfile]"]